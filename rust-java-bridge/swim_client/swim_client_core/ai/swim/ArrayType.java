/// THIS FILE IS AUTOMATICALLY GENERATED BY THE BYTE BRIDGE LIBRARY.
/// ANY CHANGES MADE MAY BE LOST.
package ai.swim;

public class ArrayType {

  private byte[] arr = new byte[] {};

  /**
   * Gets arr.
   * <p>
   * Default value: new byte[] {}.
   *
   * @return arr
   */
  public byte[] getArr() {
    return this.arr;
  }

  /**
   * Sets the new arr.
   *
   * @param arr the new arr
   * @throws IllegalArgumentException if arr contains negative elements
   */
  public void setArr(byte[] arr) {
    for (byte b : arr) {
      if (b < 0) {
        throw new IllegalArgumentException("'arr' contains negative numbers");
      }
    }
    this.arr = arr;
  }

  /**
   * Returns a byte array representation of the current configuration.
   */
  public byte[] asBytes() {
    int __buf__size = 0;
    __buf__size += (arr.length * 1);
    __buf__size += 0;
    java.nio.ByteBuffer __buf = java.nio.ByteBuffer.allocate(__buf__size);
    __buf.order(java.nio.ByteOrder.LITTLE_ENDIAN);
    __buf.putInt(this.arr.length);
    for (byte __elem_ : this.arr) {
      __buf.put(__elem_);
    }
    return __buf.array();
  }

}
