/// THIS FILE IS AUTOMATICALLY GENERATED BY THE BYTE BRIDGE LIBRARY.
/// ANY CHANGES MADE MAY BE LOST.
package ai.swim;

public class Superclass {

  private byte fieldA = 0;

  private int member_field_b = 0;

  /**
   * Gets fieldA.
   * <p>
   * Default value: 0.
   *
   * @return fieldA
   */
  public byte getFieldA() {
    return this.fieldA;
  }

  /**
   * Sets the new fieldA.
   *
   * @param fieldA the new fieldA
   * @throws IllegalArgumentException if fieldA is negative
   */
  public void setFieldA(byte fieldA) {
    if (fieldA < 0) {
      throw new IllegalArgumentException("'fieldA' must be positive");
    }
    this.fieldA = fieldA;
  }

  /**
   * Gets member_field_b.
   * <p>
   * Default value: 0.
   *
   * @return member_field_b
   */
  public int getMemberFieldB() {
    return this.member_field_b;
  }

  /**
   * Sets the new member_field_b.
   *
   * @param member_field_b the new member_field_b
   * @throws IllegalArgumentException if member_field_b is negative
   */
  public void setMemberFieldB(int member_field_b) {
    if (member_field_b < 0) {
      throw new IllegalArgumentException("'member_field_b' must be positive");
    }
    this.member_field_b = member_field_b;
  }

  /**
   * Returns a byte array representation of the current configuration.
   */
  public byte[] asBytes() {
    int __buf__size = 0;
    __buf__size += 5;
    java.nio.ByteBuffer __buf = java.nio.ByteBuffer.allocate(__buf__size);
    __buf.order(java.nio.ByteOrder.LITTLE_ENDIAN);
    __buf.put(this.fieldA);
    __buf.putInt(this.member_field_b);
    return __buf.array();
  }

  @Override
  public String toString() {
    return "Superclass{" +
     "fieldA='" + fieldA + '\'' +
     ", member_field_b='" + member_field_b + '\'' +
     '}';
  }

}
