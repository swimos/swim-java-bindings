/// THIS FILE IS AUTOMATICALLY GENERATED BY THE BYTE BRIDGE LIBRARY.
/// ANY CHANGES MADE MAY BE LOST.
package ai.swim;

public class Test {

  private int[] a = new int[] {};

  private int b = 0;

  /**
   * Gets a.
   * <p>
   * Default value: new int[] {}.
   *
   * @return a
   */
  public int[] getA() {
    return this.a;
  }

  /**
   * Sets the new a.
   *
   * @param a the new a
   * @throws IllegalArgumentException if a contains negative elements
   */
  public void setA(int[] a) {
    for (byte b : a) {
      if (b < 0) {
        throw new IllegalArgumentException("'a' contains negative numbers");
      }
    }
    this.a = a;
  }

  /**
   * Gets b.
   * <p>
   * Default value: 0.
   *
   * @return b
   */
  public int getB() {
    return this.b;
  }

  /**
   * Sets the new b.
   *
   * @param b the new b
   */
  public void setB(int b) {
    this.b = b;
  }

  /**
   * Returns a byte array representation of the current configuration.
   */
  public byte[] asBytes() {
    int __buf__size = 0;
    __buf__size += (a.length * 4);
    __buf__size += 4;
    java.nio.ByteBuffer __buf = java.nio.ByteBuffer.allocate(__buf__size);
    __buf.order(java.nio.ByteOrder.LITTLE_ENDIAN);
    __buf.putInt(this.a.length);
    for (int __elem_ : this.a) {
      __buf.putInt(__elem_);
    }
    __buf.putInt(this.b);
    return __buf.array();
  }

  @Override
  public String toString() {
    return "Test{" +
     "a='" + a + '\'' +
     ", b='" + b + '\'' +
     '}';
  }

}
